/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.fens.desktopMonitor.views;

import com.cmm.cvs2xml.util.StringManage;
import com.fens.desktopMonitor.Control.archivosProcesados_action;
import com.fens.desktopMonitor.Control.comprobantesProcesados_action;
import com.fens.desktopMonitor.Control.configuracionAcciones_action;
import com.fens.desktopMonitor.Control.configuracionEContabilidad_action;
import com.fens.desktopMonitor.Control.configuracionEmisor_action;
import com.fens.desktopMonitor.Control.configuracionGeneral_action;
import com.fens.desktopMonitor.Control.configuracionPayPoint_action;
import com.fens.desktopMonitor.Control.correoElectronico_control;
import com.fens.desktopMonitor.Control.nomina_action;
import com.fens.desktopMonitor.bo.ConfiguracionBO;
import com.fens.desktopMonitor.bo.EmisorBO;
import com.fens.desktopMonitor.dto.Configuracion;
import com.fens.desktopMonitor.dto.Emisor;
import com.fens.desktopMonitor.dto.Estatus;
import com.fens.desktopMonitor.dto.Tipocomprobante;
import com.fens.desktopMonitor.exceptions.EmisorDaoException;
import com.fens.desktopMonitor.jdbc.Conexion;
import com.fens.desktopMonitor.jdbc.EstatusDaoImpl;
import com.fens.desktopMonitor.jdbc.ResourceManager;
import com.fens.desktopMonitor.jdbc.TipocomprobanteDaoImpl;
import com.fens.desktopMonitor.util.GenericMethods;
import com.fens.desktopMonitor.util.GenericValidator;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Toolkit;

import java.io.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.Date;
import javax.print.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.quartz.JobDetail;
import org.quartz.Scheduler;

/**
 *
 * @author 578
 */
public class Principal extends javax.swing.JFrame {
   
    /* Objetos utiles*/
    GenericValidator gc = new GenericValidator(); 
    GenericMethods gm = new GenericMethods();        
    Connection conn = Conexion.getConn();
        
    /* Instanciamos objeto para llenar form al iniciar*/
    ConfiguracionBO configuracionBO = new ConfiguracionBO(this.conn,1); //Enviamos 1 por default ya que solo se guarda 1 registro de config del sistema.
    Configuracion configuracionDto = configuracionBO.getConfiguracion();  
    
    /* Instanciamos control_emisor*/
    configuracionEmisor_action controlEmisor;
    
    private int dialogButton;
    
    private Scheduler schedulerCron;
    private JobDetail jobMonitorTimbrado;
    private JobDetail jobMonitorCancelado;
    private JobDetail jobMonitorContabilidad;
    private JobDetail jobMonitorPayPoint;
    
    private boolean servicioIniciado = false;
            
    /** Creates new form Principal */
    public Principal() {
        this.controlEmisor = new configuracionEmisor_action();
        
        initComponents();
        initOtherComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cmbEstatusAP = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRutaProcesar = new javax.swing.JTextField();
        cmdProcesar = new javax.swing.JButton();
        txtRutaEjecucion = new javax.swing.JTextField();
        cmdProcesados = new javax.swing.JButton();
        txtRutaExitosas = new javax.swing.JTextField();
        cmdExitosos = new javax.swing.JButton();
        txtRutaErrores = new javax.swing.JTextField();
        cmdErrores = new javax.swing.JButton();
        txtRutaXmlCancelar = new javax.swing.JTextField();
        cmdCancelar = new javax.swing.JButton();
        txtRutaCancelados = new javax.swing.JTextField();
        cmdCancelados = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        spnDemon = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        btnGuardarCG = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        cmbExtension = new javax.swing.JComboBox();
        jPanel8 = new javax.swing.JPanel();
        btnStartService = new javax.swing.JButton();
        btnStopService = new javax.swing.JButton();
        btnRestartService = new javax.swing.JButton();
        chkImprimir = new javax.swing.JCheckBox();
        jLabel20 = new javax.swing.JLabel();
        cmbImpresora = new javax.swing.JComboBox();
        jLabel21 = new javax.swing.JLabel();
        txtRenombradoArchivosTimbrados = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        txtRutaEjecutableAdobe = new javax.swing.JTextField();
        cmdRutaEjecutableAdobe = new javax.swing.JButton();
        cmbOrdenLectura = new javax.swing.JComboBox();
        lblOrdenLectura = new javax.swing.JLabel();
        chkLotePDFConcentrado = new javax.swing.JCheckBox();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblEmisor = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }

        };
        jLabel22 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        txtRfc = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        txtRazonSocial = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtRegimenFiscal = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        txtCalle = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        txtNumInt = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        txtNumExt = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        txtColonia = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        txtCodigoPostal = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        txtEstado = new javax.swing.JTextField();
        txtPais = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        txtMunicipio = new javax.swing.JTextField();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        txtLogo = new javax.swing.JTextField();
        txtPlantilla = new javax.swing.JTextField();
        txtCer = new javax.swing.JTextField();
        txtKey = new javax.swing.JTextField();
        txtContrasena = new javax.swing.JPasswordField();
        cmdRutaLogoEmisor = new javax.swing.JButton();
        cmdRutaPlantillaEmisor = new javax.swing.JButton();
        cmdRutaCerEmisor = new javax.swing.JButton();
        cmdRutaKeyEmisor = new javax.swing.JButton();
        cmdGuardarEmisor = new javax.swing.JButton();
        cmdEliminar = new javax.swing.JButton();
        chkEstatusEmisor = new javax.swing.JCheckBox();
        jLabel41 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        txtNombreComercial = new javax.swing.JTextField();
        jLabel49 = new javax.swing.JLabel();
        txtPlantillaNomina = new javax.swing.JTextField();
        cmdRutaPlantillaNomina = new javax.swing.JButton();
        cmdSeries = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        txtPlantillaRetenciones = new javax.swing.JTextField();
        cmdRutaPlantillaRetenciones = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        chkSectorPrimario = new javax.swing.JCheckBox();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblArchivosProcesados = new javax.swing.JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }

        };
        txtFechaIniAP = new com.toedter.calendar.JDateChooser();
        jLabel39 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        txtFechaFinAP = new com.toedter.calendar.JDateChooser();
        btnRefreshAP = new javax.swing.JButton();
        btnExportAP = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        cmbTipoAP = new javax.swing.JComboBox();
        jLabel46 = new javax.swing.JLabel();
        cmbProcesadosAP = new javax.swing.JComboBox();
        jScrollBar1 = new javax.swing.JScrollBar();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblCompProcesados = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }

        };
        jLabel42 = new javax.swing.JLabel();
        txtFechaFinCP = new com.toedter.calendar.JDateChooser();
        jLabel43 = new javax.swing.JLabel();
        txtFechaIniCP = new com.toedter.calendar.JDateChooser();
        btnRefreshCP = new javax.swing.JButton();
        btnExportCP = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        cmbTipoCP = new javax.swing.JComboBox();
        jLabel47 = new javax.swing.JLabel();
        cmbEstatusCP = new javax.swing.JComboBox();
        txtFiltroRfc = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        txtFiltroComodin = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblNomina = new javax.swing.JTable(){

            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }
        };
        btnExportNomina = new javax.swing.JButton();
        btnRefreshNomina = new javax.swing.JButton();
        txtFechaIniNomina = new com.toedter.calendar.JDateChooser();
        txtFechaFinNomina = new com.toedter.calendar.JDateChooser();
        jLabel52 = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        txtRfcNomina = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        txtComodinNomina = new javax.swing.JTextField();
        cmbFechaFiltrada = new javax.swing.JComboBox();
        jLabel56 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        chkActivaEmail = new javax.swing.JCheckBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        txtNomCorreo = new javax.swing.JTextField();
        txtDirCorreo = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtServidorSmtp = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        txtPuertoSmtp = new javax.swing.JTextField();
        chkServerAutentic = new javax.swing.JCheckBox();
        jLabel16 = new javax.swing.JLabel();
        txtDestinatariosFijos = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtAsuntoCorreo = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtPantillaCorreo = new javax.swing.JTextArea();
        jLabel19 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        pswCorreoPass = new javax.swing.JPasswordField();
        chkLoteNotificaciones = new javax.swing.JCheckBox();
        jPanelConfigAcciones = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTableAcciones = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;
            }

        };
        jPanelAccionesForm = new javax.swing.JPanel();
        lblIdSerie = new javax.swing.JLabel();
        lblIdSerie1 = new javax.swing.JLabel();
        txtIdAccion = new javax.swing.JTextField();
        txtAccionClave = new javax.swing.JTextField();
        chkAccionCopiaArchivos = new javax.swing.JCheckBox();
        lblIdSerie3 = new javax.swing.JLabel();
        txtAccionRutaCopia = new javax.swing.JTextField();
        lblIdSerie2 = new javax.swing.JLabel();
        txtAccionCodigoPostal = new javax.swing.JTextField();
        chkAccionActivarCorreo = new javax.swing.JCheckBox();
        lblIdSerie4 = new javax.swing.JLabel();
        txtAccionDestinatarios = new javax.swing.JTextField();
        cmdAccionGuardar = new javax.swing.JButton();
        cmdAccionEliminar = new javax.swing.JButton();
        chkAccionActivarImpresion = new javax.swing.JCheckBox();
        jLabel58 = new javax.swing.JLabel();
        cmbAccionImpresora = new javax.swing.JComboBox();
        lblIdSerie5 = new javax.swing.JLabel();
        txtAccionPlantillaFactura = new javax.swing.JTextField();
        cmdAccionRutaArchivo = new javax.swing.JButton();
        cmdAccionPlantillaFactura = new javax.swing.JButton();
        lblIdSerie6 = new javax.swing.JLabel();
        txtAccionRutaLogo = new javax.swing.JTextField();
        cmdAccionRutaLogo = new javax.swing.JButton();
        chkAccionActivarSoporteAdobe = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane7 = new javax.swing.JScrollPane();
        txtLogTemporal = new javax.swing.JTextArea();
        jPanelEContabilidad = new javax.swing.JPanel();
        jLabel60 = new javax.swing.JLabel();
        txtRutaEntradaEContabilidad = new javax.swing.JTextField();
        cmdRutaEntradaEContabilidad = new javax.swing.JButton();
        cmdRutaDestinoEContabilidad = new javax.swing.JButton();
        txtRutaDestinoEContabilidad = new javax.swing.JTextField();
        jLabel61 = new javax.swing.JLabel();
        btnGuardarEContabilidad = new javax.swing.JButton();
        jPanel9 = new javax.swing.JPanel();
        jLabel63 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        txtRutaEntradaPayPoint = new javax.swing.JTextField();
        cmdRutaEntradaPayPoint = new javax.swing.JButton();
        txtRutaDestinoPayPoint = new javax.swing.JTextField();
        cmdRutaDestinoPayPoint = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Monitor de Texto");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        cmbEstatusAP.setMaximumSize(new java.awt.Dimension(32767, 540));
        cmbEstatusAP.setPreferredSize(new java.awt.Dimension(1071, 540));

        jPanel1.setPreferredSize(new java.awt.Dimension(777, 200));

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Carpeta  Origen  de  Archivos   para   Procesar:");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        jLabel2.setText("Carpeta     de      Archivos      en        Ejecución:");

        jLabel3.setText("Carpeta  Destino  de  Comprobantes   Exitosos:");

        jLabel4.setText("Carpeta Destino de Comprobantes con Errores:");

        jLabel5.setText("Carpeta  Origen   de   XML   para   Cancelación (CFDI):");

        jLabel6.setText("Carpeta    Destino   de   Archivos   Cancelados (CFDI):");

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Configuración de Parámetros para Monitoreo de Archivos");

        txtRutaProcesar.setText(configuracionDto.getRutaorigenprocesar());

        cmdProcesar.setText("...");
        cmdProcesar.setPreferredSize(new java.awt.Dimension(49, 25));
        cmdProcesar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcesarActionPerformed(evt);
            }
        });

        txtRutaEjecucion.setText(configuracionDto.getRutacarpetaejecucion());

        cmdProcesados.setText("...");
        cmdProcesados.setPreferredSize(new java.awt.Dimension(49, 25));
        cmdProcesados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdProcesadosActionPerformed(evt);
            }
        });

        txtRutaExitosas.setText(configuracionDto.getRutacarpetaexitosos());

        cmdExitosos.setText("...");
        cmdExitosos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdExitososActionPerformed(evt);
            }
        });

        txtRutaErrores.setText(configuracionDto.getRutacarpetaerrores());

        cmdErrores.setText("...");
        cmdErrores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdErroresActionPerformed(evt);
            }
        });

        txtRutaXmlCancelar.setText(configuracionDto.getRutaorigencancelacionesxml());

        cmdCancelar.setText("...");
        cmdCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelarActionPerformed(evt);
            }
        });

        txtRutaCancelados.setText(configuracionDto.getRutadestinocancelacionesxml());

        cmdCancelados.setText("...");
        cmdCancelados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCanceladosActionPerformed(evt);
            }
        });

        jLabel8.setText("Intervalo de Ejecución del Monitor de Archivos: ");

        spnDemon.setModel(new javax.swing.SpinnerNumberModel(1, 1, null, 1));
        spnDemon.setValue(configuracionDto.getMinutosdemon());

        jLabel9.setText("minutos");

        btnGuardarCG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        btnGuardarCG.setText("Guardar");
        btnGuardarCG.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCGActionPerformed(evt);
            }
        });

        jLabel10.setText("Extension    de     Archivos     para      Procesar:");

        cmbExtension.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "CSV", "TXT" }));
        cmbExtension.setEnabled(false);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Estado del Servicio", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 10), new java.awt.Color(0, 102, 102))); // NOI18N
        jPanel8.setForeground(new java.awt.Color(0, 102, 102));

        btnStartService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/play.png"))); // NOI18N
        btnStartService.setText("Iniciar    ");
        btnStartService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStartServiceActionPerformed(evt);
            }
        });

        btnStopService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/stop.png"))); // NOI18N
        btnStopService.setText("Detener");
        btnStopService.setEnabled(false);
        btnStopService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStopServiceActionPerformed(evt);
            }
        });

        btnRestartService.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/restart.png"))); // NOI18N
        btnRestartService.setText("Reiniciar");
        btnRestartService.setEnabled(false);
        btnRestartService.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRestartServiceActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel8Layout = new org.jdesktop.layout.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(btnStartService, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btnStopService, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(btnRestartService, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(16, 16, 16))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .add(btnStartService, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(btnStopService)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(btnRestartService)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        chkImprimir.setText("Activar impresión de Comprobantes (CFDI)");
        chkImprimir.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkImprimirStateChanged(evt);
            }
        });

        jLabel20.setText("Impresora:");

        cmbImpresora.setToolTipText("");
        cmbImpresora.setEnabled(false);

        jLabel21.setText("Parámetros re-nombrado archivos Timbrados (CFDI):");

        txtRenombradoArchivosTimbrados.setText(configuracionDto.getRenamearchivostimbrados());

        jLabel57.setText("Secuencias permitidas: _ (guion bajo), %arc% , %re% , %rr% , %fem% , %folio% , %uuid%");

        jLabel59.setText("Ruta Ejecutable Adobe Reader:");

        txtRutaEjecutableAdobe.setText(StringManage.getValidString(configuracionDto.getRutaEjecutableAdobeReader()));

        cmdRutaEjecutableAdobe.setText("...");
        cmdRutaEjecutableAdobe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaEjecutableAdobeActionPerformed(evt);
            }
        });

        cmbOrdenLectura.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha Modificación", "Alfabético", "Sin Orden" }));

        lblOrdenLectura.setText("Orden Lectura de Archivos Timbrado:");

        chkLotePDFConcentrado.setText("Generar PDF concentrado por Lote Timbrado");
        chkLotePDFConcentrado.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkLotePDFConcentradoStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel7)
                            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel10, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel8, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                            .add(jLabel4, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(chkImprimir, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(jLabel5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 267, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(0, 0, Short.MAX_VALUE)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                                .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(cmbImpresora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 656, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(btnGuardarCG)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 261, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .add(jLabel57, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED))
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(txtRenombradoArchivosTimbrados)
                                                .add(6, 6, 6)))))
                                .add(jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(281, 281, 281)
                                        .add(txtRutaEjecutableAdobe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 675, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jLabel59, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(706, 706, 706))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(lblOrdenLectura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 261, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(20, 20, 20)
                                        .add(cmbOrdenLectura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(chkLotePDFConcentrado, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(268, 268, 268)))
                                .add(cmdRutaEjecutableAdobe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel1Layout.createSequentialGroup()
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                    .add(jLabel3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .add(jLabel1))
                                .add(53, 53, 53)
                                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(txtRutaCancelados)
                                            .add(txtRutaEjecucion)
                                            .add(txtRutaExitosas)
                                            .add(txtRutaProcesar)
                                            .add(txtRutaErrores)
                                            .add(txtRutaXmlCancelar))
                                        .add(10, 10, 10)
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(cmdProcesados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(cmdProcesar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(cmdExitosos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(cmdErrores, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(cmdCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(cmdCancelados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                    .add(jPanel1Layout.createSequentialGroup()
                                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(cmbExtension, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jPanel1Layout.createSequentialGroup()
                                                .add(spnDemon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 35, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jLabel9)))
                                        .add(0, 0, Short.MAX_VALUE)))))
                        .add(32, 32, 32))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jLabel7)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaProcesar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel1)
                    .add(cmdProcesar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaEjecucion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel2)
                    .add(cmdProcesados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(3, 3, 3)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaExitosas, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel3)
                    .add(cmdExitosos))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaErrores, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel4)
                    .add(cmdErrores))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel5)
                    .add(txtRutaXmlCancelar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdCancelar))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaCancelados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel6)
                    .add(cmdCancelados))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(spnDemon, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel8)
                    .add(jLabel9))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel10)
                    .add(cmbExtension, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel20)
                    .add(chkImprimir, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmbImpresora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaEjecutableAdobe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel59)
                    .add(cmdRutaEjecutableAdobe))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(lblOrdenLectura)
                    .add(cmbOrdenLectura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chkLotePDFConcentrado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                        .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel21)
                            .add(txtRenombradoArchivosTimbrados, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabel57)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(btnGuardarCG))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel8, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cmbEstatusAP.addTab("Configuración General", jPanel1);

        tblEmisor.setAutoCreateRowSorter(true);
        tblEmisor.setToolTipText("");
        tblEmisor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblEmisorMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblEmisor);
        tblEmisor.getTableHeader().setReorderingAllowed(false) ;

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(0, 102, 102));
        jLabel22.setText("Datos Fiscales");

        jLabel23.setText("*RFC:");

        jLabel24.setText("Razón Social:");

        jLabel25.setText("*Régimen Fiscal:");

        jLabel26.setText("*Calle:");

        jLabel27.setText("Num Exterior:");

        jLabel28.setText("Num Interior:");

        jLabel29.setText("Colonia:");

        jLabel30.setText("*Codigo Postal:");

        jLabel31.setText("*País:");

        jLabel32.setText("*Estado:");

        jLabel33.setText("*Municipio:");

        jLabel34.setText("Logo:");

        jLabel35.setText("Plantilla Factura:");

        jLabel36.setText("*Certificado (.cer):");

        jLabel37.setText("*Llave Privada (.key):");

        jLabel38.setText("*Contraseña:");

        cmdRutaLogoEmisor.setText("...");
        cmdRutaLogoEmisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaLogoEmisorActionPerformed(evt);
            }
        });

        cmdRutaPlantillaEmisor.setText("...");
        cmdRutaPlantillaEmisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaPlantillaEmisorActionPerformed(evt);
            }
        });

        cmdRutaCerEmisor.setText("...");
        cmdRutaCerEmisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaCerEmisorActionPerformed(evt);
            }
        });

        cmdRutaKeyEmisor.setText("...");
        cmdRutaKeyEmisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaKeyEmisorActionPerformed(evt);
            }
        });

        cmdGuardarEmisor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        cmdGuardarEmisor.setText("Guardar");
        cmdGuardarEmisor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdGuardarEmisorActionPerformed(evt);
            }
        });

        cmdEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Windows-Close-Program-icon.png"))); // NOI18N
        cmdEliminar.setText("Eliminar");
        cmdEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdEliminarActionPerformed(evt);
            }
        });

        chkEstatusEmisor.setSelected(true);

        jLabel41.setText("Activo:");

        jLabel48.setText("Nombre Comercial:");

        jLabel49.setText("Plantilla Nomina:");

        cmdRutaPlantillaNomina.setText("...");
        cmdRutaPlantillaNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaPlantillaNominaActionPerformed(evt);
            }
        });

        cmdSeries.setText("Series");
        cmdSeries.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSeriesActionPerformed(evt);
            }
        });

        jLabel62.setText("Plantilla Retenciones:");

        cmdRutaPlantillaRetenciones.setText("...");
        cmdRutaPlantillaRetenciones.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaPlantillaRetencionesActionPerformed(evt);
            }
        });

        jLabel65.setText("Sector primario:");

        org.jdesktop.layout.GroupLayout jPanel7Layout = new org.jdesktop.layout.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel7Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jLabel22)
                        .addContainerGap())
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel24)
                                    .add(jLabel23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(30, 30, 30)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtRazonSocial)
                                    .add(txtRfc)))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                        .add(jLabel25, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(jLabel27)
                                        .add(jLabel29)
                                        .add(jLabel26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 38, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(jLabel30, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .add(jLabel48)
                                    .add(jLabel65)
                                    .add(jLabel41))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtRegimenFiscal)
                                    .add(txtCalle)
                                    .add(txtColonia)
                                    .add(txtNombreComercial)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .add(txtNumExt, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 161, Short.MAX_VALUE)
                                        .add(18, 18, 18)
                                        .add(jLabel28)
                                        .add(18, 18, 18)
                                        .add(txtNumInt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 167, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(txtCodigoPostal)
                                            .add(jPanel7Layout.createSequentialGroup()
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(chkEstatusEmisor)
                                                    .add(chkSectorPrimario))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(cmdSeries)))
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                                            .add(jPanel7Layout.createSequentialGroup()
                                                .add(cmdGuardarEmisor)
                                                .add(29, 29, 29)
                                                .add(cmdEliminar)
                                                .add(23, 23, 23))
                                            .add(jPanel7Layout.createSequentialGroup()
                                                .add(jLabel31, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 44, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(txtPais)))))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel7Layout.createSequentialGroup()
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .add(jLabel32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 47, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(70, 70, 70))
                                            .add(jPanel7Layout.createSequentialGroup()
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(jLabel34)
                                                    .add(jLabel35)
                                                    .add(jLabel33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)))
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtMunicipio)
                                            .add(txtEstado)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(txtPlantilla, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 432, Short.MAX_VALUE)
                                                    .add(txtLogo))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, cmdRutaLogoEmisor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, cmdRutaPlantillaEmisor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                                    .add(jPanel7Layout.createSequentialGroup()
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jLabel36)
                                            .add(jLabel37)
                                            .add(jLabel38))
                                        .add(10, 10, 10)
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtContrasena)
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(txtKey)
                                                    .add(txtCer)
                                                    .add(txtPlantillaNomina)
                                                    .add(txtPlantillaRetenciones))
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                    .add(cmdRutaPlantillaNomina, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                    .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, cmdRutaCerEmisor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, cmdRutaKeyEmisor, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                                    .add(cmdRutaPlantillaRetenciones, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                                .add(18, 18, 18))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel49)
                                    .add(jLabel62))
                                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane2)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jLabel22)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel23)
                    .add(txtRfc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(txtEstado, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel32))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel24)
                    .add(txtRazonSocial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel33)
                    .add(txtMunicipio, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel34)
                    .add(txtLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdRutaLogoEmisor)
                    .add(jLabel48)
                    .add(txtNombreComercial, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel36)
                                .add(txtCer, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cmdRutaCerEmisor))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(36, 36, 36)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel37)
                                    .add(txtKey, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cmdRutaKeyEmisor))))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel38)
                            .add(txtContrasena, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanel7Layout.createSequentialGroup()
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(81, 81, 81)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(txtNumExt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel27)
                                    .add(txtNumInt, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel62)
                                    .add(txtPlantillaRetenciones, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cmdRutaPlantillaRetenciones))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(txtColonia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel29))
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel7Layout.createSequentialGroup()
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(jLabel30))
                                    .add(jPanel7Layout.createSequentialGroup()
                                        .add(18, 18, 18)
                                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                            .add(txtCodigoPostal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(jLabel31)
                                            .add(txtPais, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                            .add(jPanel7Layout.createSequentialGroup()
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(jLabel35)
                                    .add(txtPlantilla, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cmdRutaPlantillaEmisor)
                                    .add(txtRegimenFiscal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel25))
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                    .add(txtCalle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(jLabel26)
                                    .add(jLabel49)
                                    .add(txtPlantillaNomina, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(cmdRutaPlantillaNomina))
                                .add(18, 18, 18)
                                .add(jLabel28)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(cmdEliminar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cmdGuardarEmisor)
                                .add(cmdSeries))
                            .add(jPanel7Layout.createSequentialGroup()
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabel41)
                                    .add(chkEstatusEmisor))
                                .add(1, 1, 1)
                                .add(jPanel7Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(chkSectorPrimario)
                                    .add(jLabel65))))))
                .add(18, 18, 18)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        txtPais.getAccessibleContext().setAccessibleDescription("");

        cmbEstatusAP.addTab("Configuración Emisor", jPanel7);

        tblArchivosProcesados.setAutoCreateRowSorter(true);
        jScrollPane3.setViewportView(tblArchivosProcesados);
        tblArchivosProcesados.getTableHeader().setReorderingAllowed(false) ;

        txtFechaIniAP.setDateFormatString("dd/MM/yyyy");

        jLabel39.setText("Fecha Inicial: ");

        jLabel40.setText("Fecha Final:");

        txtFechaFinAP.setDateFormatString("dd/MM/yyyy");

        btnRefreshAP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Window-Refresh-icon.png"))); // NOI18N
        btnRefreshAP.setText("Actualizar");
        btnRefreshAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshAPActionPerformed(evt);
            }
        });

        btnExportAP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Excel-icon.png"))); // NOI18N
        btnExportAP.setText("Exportar");
        btnExportAP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportAPActionPerformed(evt);
            }
        });

        jLabel44.setText("Tipo Comprobante:");

        jLabel46.setText("Estatus:");

        org.jdesktop.layout.GroupLayout jPanel2Layout = new org.jdesktop.layout.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane3)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jLabel44)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cmbTipoAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabel46)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(cmbProcesadosAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 294, Short.MAX_VALUE)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel39, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                            .add(jLabel40, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFechaFinAP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txtFechaIniAP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(btnRefreshAP)
                        .add(18, 18, 18)
                        .add(btnExportAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 103, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel2Layout.createSequentialGroup()
                        .add(0, 0, Short.MAX_VALUE)
                        .add(jScrollBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel2Layout.createSequentialGroup()
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtFechaIniAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmbProcesadosAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel39))
                        .add(10, 10, 10)
                        .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtFechaFinAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel40)))
                    .add(jPanel2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(btnExportAP)
                        .add(btnRefreshAP))
                    .add(jLabel44)
                    .add(cmbTipoAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel46))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 438, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollBar1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(84, 84, 84))
        );

        cmbEstatusAP.addTab("Archivos Procesados", jPanel2);

        tblCompProcesados.setAutoCreateRowSorter(true);
        tblCompProcesados.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane4.setViewportView(tblCompProcesados);
        tblCompProcesados.getTableHeader().setReorderingAllowed(false) ;

        jLabel42.setText("Fecha Inicial:");

        txtFechaFinCP.setDateFormatString("dd/MM/yyyy");

        jLabel43.setText("Fecha Final:");

        txtFechaIniCP.setDateFormatString("dd/MM/yyyy");

        btnRefreshCP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Window-Refresh-icon.png"))); // NOI18N
        btnRefreshCP.setText("Actualizar");
        btnRefreshCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshCPActionPerformed(evt);
            }
        });

        btnExportCP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Excel-icon.png"))); // NOI18N
        btnExportCP.setText("Exportar");
        btnExportCP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportCPActionPerformed(evt);
            }
        });

        jLabel45.setText("Tipo Comprobante:");

        jLabel47.setText("Estatus:");

        jLabel50.setText("RFC:");

        jLabel51.setText("Serie / Folio / UUID:");

        org.jdesktop.layout.GroupLayout jPanel3Layout = new org.jdesktop.layout.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane4)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel45)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(cmbTipoCP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 100, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(jPanel3Layout.createSequentialGroup()
                                .add(jLabel50)
                                .add(18, 18, 18)
                                .add(txtFiltroRfc)))
                        .add(56, 56, 56)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel47)
                            .add(jLabel51))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFiltroComodin)
                            .add(cmbEstatusCP, 0, 100, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 185, Short.MAX_VALUE)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel42, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 70, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFechaIniCP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txtFechaFinCP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(btnRefreshCP)
                        .add(18, 18, 18)
                        .add(btnExportCP)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel45)
                    .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(btnRefreshCP)
                        .add(btnExportCP))
                    .add(cmbTipoCP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanel3Layout.createSequentialGroup()
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(txtFechaIniCP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmbEstatusCP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel42))
                        .add(7, 7, 7)
                        .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel3Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel43)
                                .add(txtFiltroRfc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel50)
                                .add(jLabel51)
                                .add(txtFiltroComodin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                            .add(txtFechaFinCP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jLabel47))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 394, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(179, 179, 179))
        );

        cmbEstatusAP.addTab("Comprobantes Procesados", jPanel3);

        tblNomina.setAutoCreateRowSorter(true);
        tblNomina.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane5.setViewportView(tblNomina);
        tblNomina.getTableHeader().setReorderingAllowed(false) ;

        btnExportNomina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Excel-icon.png"))); // NOI18N
        btnExportNomina.setText("Exportar");
        btnExportNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExportNominaActionPerformed(evt);
            }
        });

        btnRefreshNomina.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Window-Refresh-icon.png"))); // NOI18N
        btnRefreshNomina.setText("Actualizar");
        btnRefreshNomina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshNominaActionPerformed(evt);
            }
        });

        txtFechaIniNomina.setDateFormatString("dd/MM/yyyy");

        txtFechaFinNomina.setDateFormatString("dd/MM/yyyy");

        jLabel52.setText("Fecha Inicial: ");

        jLabel53.setText("Fecha Final:  ");

        jLabel54.setText("Empresa ( RFC ): ");

        jLabel55.setText("UUID / No. Empleado / Puesto / Departamento:");

        cmbFechaFiltrada.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecciona...", "Fecha de Pago", "Fecha Inicio Pago", "Fecha Fin Pago" }));

        jLabel56.setText("Fecha Filtrada:");

        org.jdesktop.layout.GroupLayout jPanel4Layout = new org.jdesktop.layout.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane5)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                                .add(jLabel55)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED))
                            .add(jPanel4Layout.createSequentialGroup()
                                .add(jLabel54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 107, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(130, 130, 130)))
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                            .add(txtComodinNomina, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 148, Short.MAX_VALUE)
                            .add(txtRfcNomina))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                                .add(jLabel56)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                .add(cmbFechaFiltrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(18, 18, 18)
                                .add(jLabel52))
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel53))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFechaIniNomina, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(txtFechaFinNomina, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .add(18, 18, 18)
                        .add(btnRefreshNomina)
                        .add(18, 18, 18)
                        .add(btnExportNomina)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                        .add(btnExportNomina)
                        .add(btnRefreshNomina))
                    .add(jPanel4Layout.createSequentialGroup()
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFechaIniNomina, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel52, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .add(jLabel54)
                                .add(txtRfcNomina, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cmbFechaFiltrada, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jLabel56)))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(txtFechaFinNomina, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jPanel4Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(jLabel53)
                                .add(jLabel55)
                                .add(txtComodinNomina, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 569, Short.MAX_VALUE)
                .addContainerGap())
        );

        cmbEstatusAP.addTab("Reporte Nómina", jPanel4);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Configuracion de Correo Electronico");

        chkActivaEmail.setText("Habilitar Notificaciones Vía Correo Electrónico");

        jLabel12.setText("Su Nombre:");

        jLabel13.setText("Dirección   de   Correo   Electrónico:");

        txtNomCorreo.setText(configuracionDto.getUsuarioremitente());

        txtDirCorreo.setText(configuracionDto.getCorreoremitente());

        jLabel14.setText("Servidor de Correo Saliente (SMTP):");

        txtServidorSmtp.setText(configuracionDto.getDominiosmtp());

        jLabel15.setText("Puerto:");

        txtPuertoSmtp.setText(Integer.toString(configuracionDto.getPuertosmtp()));

        chkServerAutentic.setText("Servidor Requiere Autenticación");

        jLabel16.setText("Destinatarios Fijos ( Separar con punto y coma )");

        txtDestinatariosFijos.setText(configuracionDto.getDestinatariosfijos());

        jLabel17.setText("Asunto:");

        txtAsuntoCorreo.setText(configuracionDto.getAsuntocorreo());

        jLabel18.setText("Contraseña:");

        txtPantillaCorreo.setColumns(20);
        txtPantillaCorreo.setRows(5);
        txtPantillaCorreo.setText(configuracionDto.getPlantillacorreo());
        jScrollPane1.setViewportView(txtPantillaCorreo);

        jLabel19.setText("Plantilla:");

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        pswCorreoPass.setText(configuracionDto.getPasswordcorreo());

        chkLoteNotificaciones.setText("Notificación Única Por Lote");

        org.jdesktop.layout.GroupLayout jPanel6Layout = new org.jdesktop.layout.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(jLabel17)
                            .add(jLabel19))
                        .add(114, 114, 114)
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtDestinatariosFijos)
                            .add(txtAsuntoCorreo)
                            .add(jScrollPane1)))
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(2, 2, 2)
                                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel6Layout.createSequentialGroup()
                                        .add(jLabel14)
                                        .add(18, 18, 18)
                                        .add(txtServidorSmtp)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(jLabel15)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                        .add(txtPuertoSmtp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 51, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(chkServerAutentic))
                                    .add(jLabel16)
                                    .add(jPanel6Layout.createSequentialGroup()
                                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel12, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(org.jdesktop.layout.GroupLayout.LEADING, jLabel13))
                                            .add(jLabel18))
                                        .add(20, 20, 20)
                                        .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(txtNomCorreo)
                                            .add(txtDirCorreo)
                                            .add(pswCorreoPass, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE))
                                        .add(298, 298, 298))))
                            .add(jPanel6Layout.createSequentialGroup()
                                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanel6Layout.createSequentialGroup()
                                        .add(chkActivaEmail)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                                        .add(chkLoteNotificaciones))
                                    .add(jLabel11)
                                    .add(jButton2))
                                .add(0, 0, Short.MAX_VALUE)))
                        .add(86, 86, 86)))
                .add(26, 26, 26))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel6Layout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jLabel11)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(chkActivaEmail)
                    .add(chkLoteNotificaciones))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel12)
                    .add(txtNomCorreo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtDirCorreo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel13))
                .add(6, 6, 6)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel18)
                    .add(pswCorreoPass, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtServidorSmtp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel14)
                    .add(jLabel15)
                    .add(txtPuertoSmtp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(chkServerAutentic))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jLabel16)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(txtDestinatariosFijos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel17)
                    .add(txtAsuntoCorreo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(jPanel6Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel6Layout.createSequentialGroup()
                        .add(21, 21, 21)
                        .add(jLabel19))
                    .add(jPanel6Layout.createSequentialGroup()
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 159, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButton2)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbEstatusAP.addTab("Correo Electrónico", jPanel6);

        jTableAcciones.setAutoCreateRowSorter(true);
        jTableAcciones.setToolTipText("");
        jTableAcciones.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jTableAcciones.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableAccionesMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(jTableAcciones);

        lblIdSerie.setText("ID Acción: *");

        lblIdSerie1.setText("Clave: *");

        txtIdAccion.setEditable(false);

        chkAccionCopiaArchivos.setText("Activar Copia de Archivos Timbrados Exitosos");
        chkAccionCopiaArchivos.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAccionCopiaArchivosStateChanged(evt);
            }
        });

        lblIdSerie3.setText("Ruta Copia Archivo:");

        txtAccionRutaCopia.setEnabled(false);

        lblIdSerie2.setText("Codigo Postal:");

        chkAccionActivarCorreo.setText("Activar Envío de Correo Electrónico Adicional  / Separar destinatarios con punto y coma");
        chkAccionActivarCorreo.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAccionActivarCorreoStateChanged(evt);
            }
        });

        lblIdSerie4.setText("Destinatarios:");

        txtAccionDestinatarios.setEnabled(false);

        cmdAccionGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        cmdAccionGuardar.setText("Guardar");
        cmdAccionGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccionGuardarActionPerformed(evt);
            }
        });

        cmdAccionEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Windows-Close-Program-icon.png"))); // NOI18N
        cmdAccionEliminar.setText("Eliminar");
        cmdAccionEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccionEliminarActionPerformed(evt);
            }
        });

        chkAccionActivarImpresion.setText("Activar Impresion");
        chkAccionActivarImpresion.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAccionActivarImpresionStateChanged(evt);
            }
        });

        jLabel58.setText("Impresora:");

        cmbAccionImpresora.setToolTipText("");
        cmbAccionImpresora.setEnabled(false);

        lblIdSerie5.setText("Plantilla (.jasper)");

        cmdAccionRutaArchivo.setText("...");
        cmdAccionRutaArchivo.setEnabled(false);
        cmdAccionRutaArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccionRutaArchivoActionPerformed(evt);
            }
        });

        cmdAccionPlantillaFactura.setText("...");
        cmdAccionPlantillaFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccionPlantillaFacturaActionPerformed(evt);
            }
        });

        lblIdSerie6.setText("Logo (.jpg)");

        cmdAccionRutaLogo.setText("...");
        cmdAccionRutaLogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdAccionRutaLogoActionPerformed(evt);
            }
        });

        chkAccionActivarSoporteAdobe.setText("Usar Adobe Reader como intermediario");
        chkAccionActivarSoporteAdobe.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                chkAccionActivarSoporteAdobeStateChanged(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelAccionesFormLayout = new org.jdesktop.layout.GroupLayout(jPanelAccionesForm);
        jPanelAccionesForm.setLayout(jPanelAccionesFormLayout);
        jPanelAccionesFormLayout.setHorizontalGroup(
            jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelAccionesFormLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblIdSerie)
                            .add(lblIdSerie1)
                            .add(lblIdSerie2))
                        .add(28, 28, 28)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(txtIdAccion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                    .add(txtAccionClave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(23, 23, 23)
                                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                                        .add(lblIdSerie3)
                                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .add(txtAccionRutaCopia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 580, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(cmdAccionRutaArchivo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(13, 13, 13))
                                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                                        .add(chkAccionCopiaArchivos)
                                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                                    .add(cmdAccionEliminar)
                                    .add(txtAccionCodigoPostal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 150, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(22, 22, 22)
                                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                                .add(lblIdSerie5)
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .add(txtAccionPlantillaFactura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 578, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                                .add(0, 0, Short.MAX_VALUE)
                                                .add(txtAccionRutaLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 578, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                                .add(26, 26, 26)
                                                .add(cmdAccionPlantillaFactura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelAccionesFormLayout.createSequentialGroup()
                                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                                .add(cmdAccionRutaLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 33, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(lblIdSerie4)
                                            .add(jLabel58, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 64, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                            .add(lblIdSerie6))
                                        .add(55, 55, 55)
                                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(txtAccionDestinatarios)
                                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                                .add(cmbAccionImpresora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 635, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                                .add(0, 0, Short.MAX_VALUE))))
                                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                            .add(jPanelAccionesFormLayout.createSequentialGroup()
                                                .add(chkAccionActivarImpresion)
                                                .add(13, 13, 13)
                                                .add(chkAccionActivarSoporteAdobe, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 223, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                            .add(chkAccionActivarCorreo))
                                        .add(0, 0, Short.MAX_VALUE)))
                                .addContainerGap())))
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(cmdAccionGuardar)
                        .add(0, 0, Short.MAX_VALUE))))
        );
        jPanelAccionesFormLayout.setVerticalGroup(
            jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelAccionesFormLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie)
                            .add(txtIdAccion, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie1)
                            .add(txtAccionClave, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(chkAccionCopiaArchivos)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(lblIdSerie3)
                            .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                                .add(txtAccionRutaCopia, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(cmdAccionRutaArchivo)))))
                .add(3, 3, 3)
                .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(chkAccionActivarCorreo)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie4)
                            .add(txtAccionDestinatarios, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(chkAccionActivarImpresion)
                            .add(chkAccionActivarSoporteAdobe))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cmbAccionImpresora, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabel58))
                        .add(18, 18, 18)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie6)
                            .add(txtAccionRutaLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmdAccionRutaLogo))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie5)
                            .add(txtAccionPlantillaFactura, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmdAccionPlantillaFactura))
                        .add(0, 3, Short.MAX_VALUE))
                    .add(jPanelAccionesFormLayout.createSequentialGroup()
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(lblIdSerie2)
                            .add(txtAccionCodigoPostal, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jPanelAccionesFormLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(cmdAccionEliminar, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmdAccionGuardar))))
                .addContainerGap())
        );

        org.jdesktop.layout.GroupLayout jPanelConfigAccionesLayout = new org.jdesktop.layout.GroupLayout(jPanelConfigAcciones);
        jPanelConfigAcciones.setLayout(jPanelConfigAccionesLayout);
        jPanelConfigAccionesLayout.setHorizontalGroup(
            jPanelConfigAccionesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelConfigAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelConfigAccionesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jScrollPane6)
                    .add(jPanelConfigAccionesLayout.createSequentialGroup()
                        .add(jPanelAccionesForm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelConfigAccionesLayout.setVerticalGroup(
            jPanelConfigAccionesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelConfigAccionesLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 226, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(18, 18, 18)
                .add(jPanelAccionesForm, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbEstatusAP.addTab("Configuración Acciones", jPanelConfigAcciones);

        txtLogTemporal.setEditable(false);
        txtLogTemporal.setBackground(new java.awt.Color(204, 204, 255));
        txtLogTemporal.setColumns(20);
        txtLogTemporal.setLineWrap(true);
        txtLogTemporal.setRows(5);
        jScrollPane7.setViewportView(txtLogTemporal);

        org.jdesktop.layout.GroupLayout jPanel5Layout = new org.jdesktop.layout.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1132, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane7, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 492, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        cmbEstatusAP.addTab("Log Temporal", jPanel5);

        jLabel60.setText("Carpeta  Origen Archivos Contabilidad:");

        txtRutaEntradaEContabilidad.setText(configuracionDto.getRutaCarpetaOrigenEcontabilidad());
        txtRutaEntradaEContabilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutaEntradaEContabilidadActionPerformed(evt);
            }
        });

        cmdRutaEntradaEContabilidad.setText("...");
        cmdRutaEntradaEContabilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaEntradaEContabilidadActionPerformed(evt);
            }
        });

        cmdRutaDestinoEContabilidad.setText("...");
        cmdRutaDestinoEContabilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaDestinoEContabilidadActionPerformed(evt);
            }
        });

        txtRutaDestinoEContabilidad.setText(configuracionDto.getRutaCarpetaDestinoEcontabilidad());

        jLabel61.setText("Carpeta  Destino Archivos Contabilidad");

        btnGuardarEContabilidad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        btnGuardarEContabilidad.setText("Guardar");
        btnGuardarEContabilidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarEContabilidadActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelEContabilidadLayout = new org.jdesktop.layout.GroupLayout(jPanelEContabilidad);
        jPanelEContabilidad.setLayout(jPanelEContabilidadLayout);
        jPanelEContabilidadLayout.setHorizontalGroup(
            jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelEContabilidadLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelEContabilidadLayout.createSequentialGroup()
                        .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(jLabel61, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .add(jLabel60, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 116, Short.MAX_VALUE)
                        .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtRutaDestinoEContabilidad, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 755, Short.MAX_VALUE)
                            .add(org.jdesktop.layout.GroupLayout.TRAILING, txtRutaEntradaEContabilidad))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(cmdRutaEntradaEContabilidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(cmdRutaDestinoEContabilidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 34, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .add(52, 52, 52))
                    .add(jPanelEContabilidadLayout.createSequentialGroup()
                        .add(btnGuardarEContabilidad)
                        .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanelEContabilidadLayout.setVerticalGroup(
            jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelEContabilidadLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel60)
                    .add(txtRutaEntradaEContabilidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdRutaEntradaEContabilidad))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelEContabilidadLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(txtRutaDestinoEContabilidad, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel61)
                    .add(cmdRutaDestinoEContabilidad))
                .add(335, 335, 335)
                .add(btnGuardarEContabilidad)
                .addContainerGap(181, Short.MAX_VALUE))
        );

        cmbEstatusAP.addTab("E-Contabilidad", jPanelEContabilidad);

        jLabel63.setText("Carpeta Origen Archivos PayPoint:");

        jLabel64.setText("Carpeta Destino Archivos PayPoint:");

        txtRutaEntradaPayPoint.setText(configuracionDto.getRutaCarpetaOrigenPaypoint());

        cmdRutaEntradaPayPoint.setText("...");
        cmdRutaEntradaPayPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaEntradaPayPointActionPerformed(evt);
            }
        });

        txtRutaDestinoPayPoint.setText(configuracionDto.getRutaCarpetaDestinoPaypoint());

        cmdRutaDestinoPayPoint.setText("...");
        cmdRutaDestinoPayPoint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdRutaDestinoPayPointActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fens/desktopMonitor/images/Save-icon.png"))); // NOI18N
        jButton4.setText("Guardar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel9Layout = new org.jdesktop.layout.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jLabel63, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(jLabel64, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(txtRutaEntradaPayPoint, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 862, Short.MAX_VALUE)
                    .add(txtRutaDestinoPayPoint))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(cmdRutaEntradaPayPoint, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdRutaDestinoPayPoint, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel9Layout.createSequentialGroup()
                .addContainerGap(599, Short.MAX_VALUE)
                .add(jButton4)
                .add(470, 470, 470))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel9Layout.createSequentialGroup()
                .add(26, 26, 26)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel63)
                    .add(txtRutaEntradaPayPoint, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdRutaEntradaPayPoint))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jPanel9Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel64)
                    .add(txtRutaDestinoPayPoint, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdRutaDestinoPayPoint))
                .add(174, 174, 174)
                .add(jButton4)
                .addContainerGap(366, Short.MAX_VALUE))
        );

        cmbEstatusAP.addTab("PayPoint", jPanel9);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(cmbEstatusAP, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 1165, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(cmbEstatusAP, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 632, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        String msgCierre = "";
        if (this.schedulerCron!=null){
            if (this.servicioIniciado){
                msgCierre = "Al cerrar el sistema, el servicio de monitoreo se detendra "
                        + "por completo, y se interrumpiran los procesos actuales de segundo plano.\n\n";
            }
        }
        int confirmed = JOptionPane.showConfirmDialog(this,
                msgCierre + "¿Estas seguro que deseas salir del sistema?", "Confirmación de salida",
                JOptionPane.YES_NO_OPTION);

        if (confirmed == JOptionPane.YES_OPTION) {
            concluirSistema();
            try{Thread.sleep(2000L);}catch(Exception ex){}
            System.exit(0);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnGuardarEContabilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarEContabilidadActionPerformed
        //Instanciamos conotrolador
        configuracionEContabilidad_action control = new configuracionEContabilidad_action(this);
        //Accion
        control.guardaDatos();

        if (servicioIniciado)
        JOptionPane.showMessageDialog(null, "Recuerda que debes reiniciar el servicio de monitoreo para que se apliquen los cambios.");
    }//GEN-LAST:event_btnGuardarEContabilidadActionPerformed

    private void cmdRutaDestinoEContabilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaDestinoEContabilidadActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaDestinoEContabilidad.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaDestinoEContabilidadActionPerformed

    private void cmdRutaEntradaEContabilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaEntradaEContabilidadActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaEntradaEContabilidad.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaEntradaEContabilidadActionPerformed

    private void chkAccionActivarSoporteAdobeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAccionActivarSoporteAdobeStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chkAccionActivarSoporteAdobeStateChanged

    private void cmdAccionRutaLogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccionRutaLogoActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG","jpg");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jpg") ){
                txtAccionRutaLogo.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jpg");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdAccionRutaLogoActionPerformed

    private void cmdAccionPlantillaFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccionPlantillaFacturaActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JASPER","jasper");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jasper") ){
                txtAccionPlantillaFactura.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jasper");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdAccionPlantillaFacturaActionPerformed

    private void cmdAccionRutaArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccionRutaArchivoActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtAccionRutaCopia.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdAccionRutaArchivoActionPerformed

    private void chkAccionActivarImpresionStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAccionActivarImpresionStateChanged
        AbstractButton abstractButton =
        (AbstractButton)evt.getSource();
        ButtonModel buttonModel = abstractButton.getModel();
        boolean selected = buttonModel.isSelected();
        cmbAccionImpresora.setEnabled(selected);
    }//GEN-LAST:event_chkAccionActivarImpresionStateChanged

    private void cmdAccionEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccionEliminarActionPerformed

        //int rowSelected;

        try{
            //rowSelected = jTableAcciones.getSelectedRow(); /* Obtenemos fila seleccionada*/

            int idAccion = Integer.parseInt(txtIdAccion.getText()); /* Fila id */
            String claveAccion = txtAccionClave.getText(); /* Fila nombre */

            //Instanciamos conotrolador
            configuracionAcciones_action action = new configuracionAcciones_action(this);

            int dialogResult = JOptionPane.showConfirmDialog (null, "¿Deseas eliminar la Acción '" + claveAccion + "'?","Advertencia",JOptionPane.YES_NO_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){
                try {

                    action.eliminarAccioncomprobante(idAccion); /* Estatus = -1 -> Eliminado*/

                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null,"Ocurrio un error al eliminar el registro:\n " + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No ha seleccionado una Serie a eliminar en el listado.");
        }
    }//GEN-LAST:event_cmdAccionEliminarActionPerformed

    private void cmdAccionGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdAccionGuardarActionPerformed

        //Instanciamos conotrolador
        configuracionAcciones_action action = new configuracionAcciones_action(this);
        try {
            //Accion
            action.guardaAccion();
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Ocurrio un error al guardar el registro:\n " + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmdAccionGuardarActionPerformed

    private void chkAccionActivarCorreoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAccionActivarCorreoStateChanged
        AbstractButton abstractButton =
        (AbstractButton)evt.getSource();
        ButtonModel buttonModel = abstractButton.getModel();
        boolean selected = buttonModel.isSelected();
        txtAccionDestinatarios.setEnabled(selected);
    }//GEN-LAST:event_chkAccionActivarCorreoStateChanged

    private void chkAccionCopiaArchivosStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkAccionCopiaArchivosStateChanged
        AbstractButton abstractButton =
        (AbstractButton)evt.getSource();
        ButtonModel buttonModel = abstractButton.getModel();
        boolean selected = buttonModel.isSelected();
        txtAccionRutaCopia.setEnabled(selected);
        cmdAccionRutaArchivo.setEnabled(selected);
    }//GEN-LAST:event_chkAccionCopiaArchivosStateChanged

    private void jTableAccionesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableAccionesMouseClicked
        if (evt.getClickCount() == 2) { /* Si da doble clic sobre tabla */

            int rowSelected = jTableAcciones.getSelectedRow(); /* Obtenemos fila seleccionada*/

            int idAccion = Integer.parseInt(jTableAcciones.getValueAt(rowSelected, 0).toString()); /* Fila id */

            /* Carga emisor seleccionado */

            //Instanciamos controlador
            configuracionAcciones_action action = new configuracionAcciones_action(this);

            try {
                action.cargaAccioncomprobante(idAccion);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "No se encontraron datos de la Accion seleccionada. ");
            }

        }
    }//GEN-LAST:event_jTableAccionesMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        //Instanciamos conotrolador
        correoElectronico_control control = new correoElectronico_control(this);
        //Accion
        control.guardaDatos();

    }//GEN-LAST:event_jButton2ActionPerformed

    private void btnRefreshNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshNominaActionPerformed
        try {

            String rfc = txtRfcNomina.getText();
            String comodin = txtComodinNomina.getText();
            Date fIni = txtFechaIniNomina.getDate();
            Date fFin = txtFechaFinNomina.getDate();
            String fechaFiltrada = cmbFechaFiltrada.getSelectedItem().toString();

            nomina_action control = new nomina_action(this);
            tblNomina.setModel(control.fillNomina(rfc, fechaFiltrada, fIni,fFin , comodin)); /*  Seteamos modelo a tabla  - Recarga Grid*/
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error al cargar tabla Nomina:\n" + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnRefreshNominaActionPerformed

    private void btnExportNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportNominaActionPerformed
        if(this.tblNomina.getRowCount()==1){
            JOptionPane.showMessageDialog(null, "No hay datos para Exportar");
            return;
        }

        //Instanciamos conotrolador
        nomina_action controlNomina = new nomina_action(this);
        //Accion
        controlNomina.exportaToExcel();
    }//GEN-LAST:event_btnExportNominaActionPerformed

    private void btnExportCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportCPActionPerformed
        if(this.tblCompProcesados.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No hay datos para Exportar");
            return;
        }

        //Instanciamos conotrolador
        comprobantesProcesados_action controlComprobantesProc = new comprobantesProcesados_action(this);
        //Accion
        controlComprobantesProc.exportaToExcel();

    }//GEN-LAST:event_btnExportCPActionPerformed

    private void btnRefreshCPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshCPActionPerformed
        try {

            String tipoComp = cmbTipoCP.getSelectedItem().toString();
            String estatus = cmbEstatusCP.getSelectedItem().toString();
            Date fIni = txtFechaIniCP.getDate();
            Date fFin = txtFechaFinCP.getDate();
            String rfc = txtFiltroRfc.getText();
            String comodin = txtFiltroComodin.getText();

            comprobantesProcesados_action control = new comprobantesProcesados_action(this);
            tblCompProcesados.setModel(control.fillComprobantesProcesados(tipoComp,estatus,fIni,fFin ,rfc,comodin)); /*  Seteamos modelo a tabla  - Recarga Grid*/
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error al cargar tabla de Comprobantes Procesados:\n" + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRefreshCPActionPerformed

    private void btnExportAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExportAPActionPerformed

        if(this.tblArchivosProcesados.getRowCount()==0){
            JOptionPane.showMessageDialog(null, "No hay datos para Exportar");
            return;
        }

        //Instanciamos conotrolador
        archivosProcesados_action controlArchivosProc = new archivosProcesados_action(this);
        //Accion
        controlArchivosProc.exportaToExcel();

    }//GEN-LAST:event_btnExportAPActionPerformed

    private void btnRefreshAPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshAPActionPerformed
        try {

            String estatus = cmbProcesadosAP.getSelectedItem().toString();
            Date fIni = txtFechaIniAP.getDate();
            Date fFin = txtFechaFinAP.getDate();

            archivosProcesados_action control = new archivosProcesados_action(this);
            tblArchivosProcesados.setModel(control.fillArchivosProcesados(estatus,fIni,fFin)); /*  Seteamos modelo a tabla  - Recarga Grid*/
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Error al cargar tabla de Archivos Procesados:\n" + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_btnRefreshAPActionPerformed

    private void cmdRutaPlantillaRetencionesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaPlantillaRetencionesActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroJasper=new FileNameExtensionFilter("JASPER","jasper");
        chooser.setFileFilter(filtroJasper);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jasper") ){
                txtPlantillaRetenciones.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jasper");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaPlantillaRetencionesActionPerformed

    private void cmdSeriesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSeriesActionPerformed
        if (txtRfc!=null){
            if (!StringManage.getValidString(txtRfc.getText()).equals("")){
                EmisorBO emisorBO = new EmisorBO();
                Emisor emisorDto=null;
                try{
                    emisorDto = emisorBO.findEmisorbyRfc(this.conn,txtRfc.getText());
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, "No puedes crear o modificar series si el Emisor no esta guardado en la base de datos.");
                    return;
                }
                if (emisorDto!=null){
                    Series vistaSeries = new Series(emisorDto.getIdemisor());
                    vistaSeries.setVisible(true);
                }else{
                    JOptionPane.showMessageDialog(null, "Para dar de alta series, primero debe seleccionar un Emisor previamente creado y guardado.");
                }
            }else{
                JOptionPane.showMessageDialog(null, "Para dar de alta series, primero debe seleccionar un Emisor previamente creado y guardado.");
            }
        }
    }//GEN-LAST:event_cmdSeriesActionPerformed

    private void cmdRutaPlantillaNominaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaPlantillaNominaActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JASPER","jasper");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jasper") ){
                txtPlantillaNomina.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jasper");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaPlantillaNominaActionPerformed

    private void cmdEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdEliminarActionPerformed

        int rowSelected = -1;

        try{
            rowSelected = tblEmisor.getSelectedRow(); /* Obtenemos fila seleccionada*/

            String rfc = tblEmisor.getValueAt(rowSelected, 1).toString(); /* Fila rfc */
            //Instanciamos conotrolador
            controlEmisor = new configuracionEmisor_action(this);

            int dialogResult = JOptionPane.showConfirmDialog (null, "Deseas eliminar el Emisor con RFC:\n" + rfc,"Warning",dialogButton);
            if(dialogResult == JOptionPane.YES_OPTION){
                try {

                    controlEmisor.eliminarEmisor(rfc); /* Estatus = -1 -> Eliminado*/

                } catch (EmisorDaoException ex) {
                    JOptionPane.showMessageDialog(null,"Ocurrio un error al eliminar el registro:\n " + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
                }

            }
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, "No ha seleccionado un Emisor.");
        }

    }//GEN-LAST:event_cmdEliminarActionPerformed

    private void cmdGuardarEmisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdGuardarEmisorActionPerformed

        //Instanciamos conotrolador
        controlEmisor = new configuracionEmisor_action(this);
        try {
            //Accion
            controlEmisor.guardaDatos();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null,"Ocurrio un error al guardar el registro:\n " + ex.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_cmdGuardarEmisorActionPerformed

    private void cmdRutaKeyEmisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaKeyEmisorActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("KEY","key");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".key") ){
                txtKey.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .key");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaKeyEmisorActionPerformed

    private void cmdRutaCerEmisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaCerEmisorActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("CER","cer");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".cer") ){
                txtCer.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .cer");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaCerEmisorActionPerformed

    private void cmdRutaPlantillaEmisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaPlantillaEmisorActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JASPER","jasper");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jasper") ){
                txtPlantilla.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jasper");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaPlantillaEmisorActionPerformed

    private void cmdRutaLogoEmisorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaLogoEmisorActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtroImagen=new FileNameExtensionFilter("JPG","jpg");
        chooser.setFileFilter(filtroImagen);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( ext.equals(".jpg") ){
                txtLogo.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Archivo no valido. \nSeleccione un archivo .jpg");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaLogoEmisorActionPerformed

    private void tblEmisorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblEmisorMouseClicked

        if (evt.getClickCount() == 2) { /* Si da doble clic sobre tabla */

            int rowSelected = tblEmisor.getSelectedRow(); /* Obtenemos fila seleccionada*/

            int idEmisor = Integer.parseInt(tblEmisor.getValueAt(rowSelected, 0).toString()); /* Fila id */

            /* Carga emisor seleccionado */

            //Instanciamos controlador
            controlEmisor = new configuracionEmisor_action(this);

            try {
                controlEmisor.cargaEmisor(idEmisor);
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, "No se encontraron datos del Emisor seleccionado. ");
            }

        }

    }//GEN-LAST:event_tblEmisorMouseClicked

    private void chkLotePDFConcentradoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkLotePDFConcentradoStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_chkLotePDFConcentradoStateChanged

    private void cmdRutaEjecutableAdobeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaEjecutableAdobeActionPerformed

        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FileNameExtensionFilter filtro=new FileNameExtensionFilter("EXE","exe");
        chooser.setFileFilter(filtro);
        chooser.showOpenDialog(null);

        File f = chooser.getSelectedFile();
        try{

            String path = f.getAbsolutePath();
            String ext = gm.getFileExtension(path);

            if( f.getName().equals("AcroRd32.exe") ){//ext.equals(".exe") ){
                txtRutaEjecutableAdobe.setText(path);
            }else{
                JOptionPane.showMessageDialog(null, "Ruta inválida. \nSeleccione un archivo ejecutable AcroRd32.exe (Debe tener instalado Adobe Reader)");
            }
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaEjecutableAdobeActionPerformed

    private void chkImprimirStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_chkImprimirStateChanged
        if(chkImprimir.isSelected()){
            cmbImpresora.setEnabled(true);
        }else{
            cmbImpresora.setEnabled(false);
        }
    }//GEN-LAST:event_chkImprimirStateChanged

    private void btnRestartServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRestartServiceActionPerformed
        configuracionGeneral_action action = new configuracionGeneral_action(this);
        action.reiniciarServiciosMonitor();
    }//GEN-LAST:event_btnRestartServiceActionPerformed

    private void btnStopServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStopServiceActionPerformed
        configuracionGeneral_action action = new configuracionGeneral_action(this);
        action.detenerServiciosMonitor(true);
    }//GEN-LAST:event_btnStopServiceActionPerformed

    private void btnStartServiceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStartServiceActionPerformed
        int confirm = JOptionPane.showOptionDialog(this,
            "Recuerde que al iniciar el servicio, este tomará los datos de base de datos local, "
            + "asegurese de haber guardado previamente la configuración que desea usar.",
            "Recordatorio", JOptionPane.DEFAULT_OPTION,
            JOptionPane.INFORMATION_MESSAGE, null, null, null);
        if (confirm == JOptionPane.OK_OPTION) {
            configuracionGeneral_action action = new configuracionGeneral_action(this);
            action.iniciarServiciosMonitor(false);
        }
    }//GEN-LAST:event_btnStartServiceActionPerformed

    private void btnGuardarCGActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCGActionPerformed

        //Instanciamos conotrolador
        configuracionGeneral_action control = new configuracionGeneral_action(this);
        //Accion
        control.guardaDatos();

        if (servicioIniciado)
        JOptionPane.showMessageDialog(null, "Recuerda que debes reiniciar el servicio de monitoreo para que se apliquen los cambios.");
    }//GEN-LAST:event_btnGuardarCGActionPerformed

    private void cmdCanceladosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCanceladosActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaCancelados.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdCanceladosActionPerformed

    private void cmdCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelarActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try{
            String path = f.getAbsolutePath();
            txtRutaXmlCancelar.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }
        /*  Fin Validacion */
    }//GEN-LAST:event_cmdCancelarActionPerformed

    private void cmdErroresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdErroresActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try{
            String path = f.getAbsolutePath();
            txtRutaErrores.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }
        /*  Fin Validacion */
    }//GEN-LAST:event_cmdErroresActionPerformed

    private void cmdExitososActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdExitososActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try{
            String path = f.getAbsolutePath();
            txtRutaExitosas.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }
        /*  Fin Validacion */
    }//GEN-LAST:event_cmdExitososActionPerformed

    private void cmdProcesadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcesadosActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();
        try{
            String path = f.getAbsolutePath();
            txtRutaEjecucion.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }
        /*  Fin Validacion */
    }//GEN-LAST:event_cmdProcesadosActionPerformed

    private void cmdProcesarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdProcesarActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaProcesar.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdProcesarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        
         //Instanciamos conotrolador
        configuracionPayPoint_action control = new configuracionPayPoint_action(this);
        //Accion
        control.guardaDatos();

        if (servicioIniciado)
        JOptionPane.showMessageDialog(null, "Recuerda que debes reiniciar el servicio de monitoreo para que se apliquen los cambios.");
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtRutaEntradaEContabilidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutaEntradaEContabilidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutaEntradaEContabilidadActionPerformed

    private void cmdRutaEntradaPayPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaEntradaPayPointActionPerformed
         /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaEntradaPayPoint.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaEntradaPayPointActionPerformed

    private void cmdRutaDestinoPayPointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdRutaDestinoPayPointActionPerformed
        /*  Inicia Validacion */
        JFileChooser chooser = new JFileChooser();
        chooser.setCurrentDirectory(new java.io.File("."));
        //chooser.setDialogTitle("choosertitle");
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        //chooser.setAcceptAllFileFilterUsed(false);
        chooser.showOpenDialog(null);
        File f = chooser.getSelectedFile();

        try{
            String path = f.getAbsolutePath();
            txtRutaDestinoPayPoint.setText(path);
        }catch(Exception e ){
            System.out.println("No selecciono un archivo");
        }

        /*  Fin Validacion */
    }//GEN-LAST:event_cmdRutaDestinoPayPointActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExportAP;
    private javax.swing.JButton btnExportCP;
    private javax.swing.JButton btnExportNomina;
    private javax.swing.JButton btnGuardarCG;
    private javax.swing.JButton btnGuardarEContabilidad;
    private javax.swing.JButton btnRefreshAP;
    private javax.swing.JButton btnRefreshCP;
    private javax.swing.JButton btnRefreshNomina;
    private javax.swing.JButton btnRestartService;
    private javax.swing.JButton btnStartService;
    private javax.swing.JButton btnStopService;
    public javax.swing.JCheckBox chkAccionActivarCorreo;
    public javax.swing.JCheckBox chkAccionActivarImpresion;
    public javax.swing.JCheckBox chkAccionActivarSoporteAdobe;
    public javax.swing.JCheckBox chkAccionCopiaArchivos;
    public javax.swing.JCheckBox chkActivaEmail;
    public javax.swing.JCheckBox chkEstatusEmisor;
    public javax.swing.JCheckBox chkImprimir;
    public javax.swing.JCheckBox chkLoteNotificaciones;
    public javax.swing.JCheckBox chkLotePDFConcentrado;
    public javax.swing.JCheckBox chkSectorPrimario;
    public javax.swing.JCheckBox chkServerAutentic;
    public javax.swing.JComboBox cmbAccionImpresora;
    public javax.swing.JTabbedPane cmbEstatusAP;
    public javax.swing.JComboBox cmbEstatusCP;
    public javax.swing.JComboBox cmbExtension;
    public javax.swing.JComboBox cmbFechaFiltrada;
    public javax.swing.JComboBox cmbImpresora;
    public javax.swing.JComboBox cmbOrdenLectura;
    public javax.swing.JComboBox cmbProcesadosAP;
    public javax.swing.JComboBox cmbTipoAP;
    public javax.swing.JComboBox cmbTipoCP;
    public javax.swing.JButton cmdAccionEliminar;
    public javax.swing.JButton cmdAccionGuardar;
    private javax.swing.JButton cmdAccionPlantillaFactura;
    private javax.swing.JButton cmdAccionRutaArchivo;
    private javax.swing.JButton cmdAccionRutaLogo;
    private javax.swing.JButton cmdCancelados;
    private javax.swing.JButton cmdCancelar;
    public javax.swing.JButton cmdEliminar;
    private javax.swing.JButton cmdErrores;
    private javax.swing.JButton cmdExitosos;
    public javax.swing.JButton cmdGuardarEmisor;
    private javax.swing.JButton cmdProcesados;
    private javax.swing.JButton cmdProcesar;
    private javax.swing.JButton cmdRutaCerEmisor;
    private javax.swing.JButton cmdRutaDestinoEContabilidad;
    private javax.swing.JButton cmdRutaDestinoPayPoint;
    private javax.swing.JButton cmdRutaEjecutableAdobe;
    private javax.swing.JButton cmdRutaEntradaEContabilidad;
    private javax.swing.JButton cmdRutaEntradaPayPoint;
    private javax.swing.JButton cmdRutaKeyEmisor;
    private javax.swing.JButton cmdRutaLogoEmisor;
    private javax.swing.JButton cmdRutaPlantillaEmisor;
    private javax.swing.JButton cmdRutaPlantillaNomina;
    private javax.swing.JButton cmdRutaPlantillaRetenciones;
    private javax.swing.JButton cmdSeries;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    public javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    public javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    public javax.swing.JPanel jPanelAccionesForm;
    public javax.swing.JPanel jPanelConfigAcciones;
    private javax.swing.JPanel jPanelEContabilidad;
    private javax.swing.JScrollBar jScrollBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    public javax.swing.JTable jTableAcciones;
    private javax.swing.JLabel lblIdSerie;
    private javax.swing.JLabel lblIdSerie1;
    private javax.swing.JLabel lblIdSerie2;
    private javax.swing.JLabel lblIdSerie3;
    private javax.swing.JLabel lblIdSerie4;
    private javax.swing.JLabel lblIdSerie5;
    private javax.swing.JLabel lblIdSerie6;
    private javax.swing.JLabel lblOrdenLectura;
    public javax.swing.JPasswordField pswCorreoPass;
    public javax.swing.JSpinner spnDemon;
    public javax.swing.JTable tblArchivosProcesados;
    public javax.swing.JTable tblCompProcesados;
    public javax.swing.JTable tblEmisor;
    public javax.swing.JTable tblNomina;
    public javax.swing.JTextField txtAccionClave;
    public javax.swing.JTextField txtAccionCodigoPostal;
    public javax.swing.JTextField txtAccionDestinatarios;
    public javax.swing.JTextField txtAccionPlantillaFactura;
    public javax.swing.JTextField txtAccionRutaCopia;
    public javax.swing.JTextField txtAccionRutaLogo;
    public javax.swing.JTextField txtAsuntoCorreo;
    public javax.swing.JTextField txtCalle;
    public javax.swing.JTextField txtCer;
    public javax.swing.JTextField txtCodigoPostal;
    public javax.swing.JTextField txtColonia;
    public javax.swing.JTextField txtComodinNomina;
    public javax.swing.JPasswordField txtContrasena;
    public javax.swing.JTextField txtDestinatariosFijos;
    public javax.swing.JTextField txtDirCorreo;
    public javax.swing.JTextField txtEstado;
    public com.toedter.calendar.JDateChooser txtFechaFinAP;
    public com.toedter.calendar.JDateChooser txtFechaFinCP;
    private com.toedter.calendar.JDateChooser txtFechaFinNomina;
    public com.toedter.calendar.JDateChooser txtFechaIniAP;
    public com.toedter.calendar.JDateChooser txtFechaIniCP;
    private com.toedter.calendar.JDateChooser txtFechaIniNomina;
    private javax.swing.JTextField txtFiltroComodin;
    public javax.swing.JTextField txtFiltroRfc;
    public javax.swing.JTextField txtIdAccion;
    public javax.swing.JTextField txtKey;
    public javax.swing.JTextArea txtLogTemporal;
    public javax.swing.JTextField txtLogo;
    public javax.swing.JTextField txtMunicipio;
    public javax.swing.JTextField txtNomCorreo;
    public javax.swing.JTextField txtNombreComercial;
    public javax.swing.JTextField txtNumExt;
    public javax.swing.JTextField txtNumInt;
    public javax.swing.JTextField txtPais;
    public javax.swing.JTextArea txtPantillaCorreo;
    public javax.swing.JTextField txtPlantilla;
    public javax.swing.JTextField txtPlantillaNomina;
    public javax.swing.JTextField txtPlantillaRetenciones;
    public javax.swing.JTextField txtPuertoSmtp;
    public javax.swing.JTextField txtRazonSocial;
    public javax.swing.JTextField txtRegimenFiscal;
    public javax.swing.JTextField txtRenombradoArchivosTimbrados;
    public javax.swing.JTextField txtRfc;
    public javax.swing.JTextField txtRfcNomina;
    public javax.swing.JTextField txtRutaCancelados;
    public javax.swing.JTextField txtRutaDestinoEContabilidad;
    public javax.swing.JTextField txtRutaDestinoPayPoint;
    public javax.swing.JTextField txtRutaEjecucion;
    public javax.swing.JTextField txtRutaEjecutableAdobe;
    public javax.swing.JTextField txtRutaEntradaEContabilidad;
    public javax.swing.JTextField txtRutaEntradaPayPoint;
    public javax.swing.JTextField txtRutaErrores;
    public javax.swing.JTextField txtRutaExitosas;
    public javax.swing.JTextField txtRutaProcesar;
    public javax.swing.JTextField txtRutaXmlCancelar;
    public javax.swing.JTextField txtServidorSmtp;
    // End of variables declaration//GEN-END:variables

    private void initOtherComponents() {
        
        //Centramos Form en Pantalla
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, dim.height/2-this.getSize().height/2);
    
        /*Listamos impresoras y las agregamos a combobox*/
        
        cmbImpresora.addItem("Selecciona una Impresora...");
        PrintService[] ps = PrintServiceLookup.lookupPrintServices( null , null);
        for( int i=0 ; i< ps.length; i++)
        {
           cmbImpresora.addItem(ps[i].getName());
        }
        
        /* Ponemos valor de objeto de la bd*/
        cmbImpresora.setSelectedItem(configuracionDto.getImpresorapredeterminada());
                
        if(configuracionDto.getActivarimpresion()==1)
            chkImprimir.setSelected(true);
        else
             chkImprimir.setSelected(false);
        
        if(configuracionDto.getEnviodecorreo()==1)
            chkActivaEmail.setSelected(true);
        else
             chkActivaEmail.setSelected(false);
        
        chkLoteNotificaciones.setSelected(configuracionDto.getLoteNotificaciones()==1);
        chkLotePDFConcentrado.setSelected(configuracionDto.getLotePdfConcentrado()==1);
        if (configuracionDto.getOrdenLecturaArchivos()==1
                || configuracionDto.getOrdenLecturaArchivos()==2){
            cmbOrdenLectura.setSelectedIndex(configuracionDto.getOrdenLecturaArchivos()-1);
        }else{
            cmbOrdenLectura.setSelectedIndex(2);
        }
        
        if(configuracionDto.getAutenticacionsmtp()==1)
            chkServerAutentic.setSelected(true);
        else
             chkServerAutentic.setSelected(false);
        
        
        /*LLenamos tabla con emisores */
            
        try{
            tblEmisor.setModel(configuracionEmisor_action.fillEmisores()); /*  Seteamos modelo a tabla */
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al cargar tabla de Emisores:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        /*LLenamos tabla con Archivos Procesados */
            
        try{
            archivosProcesados_action control = new archivosProcesados_action();
            tblArchivosProcesados.setModel(control.fillArchivosProcesados()); /*  Seteamos modelo a tabla */
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al cargar tabla de Archivos Procesados:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        
        /*LLenamos tabla con comprobantes Procesados */
            
        try{
            comprobantesProcesados_action control = new comprobantesProcesados_action();
            tblCompProcesados.setModel(control.fillArchivosProcesados()); /*  Seteamos modelo a tabla */
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al cargar tabla de Comprobantes Procesados:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        /*LLenamos tabla con nomina*/
            
        try{
            nomina_action control = new nomina_action();
            tblNomina.setModel(control.fillNomina()); /*  Seteamos modelo a tabla */
            
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al cargar tabla Nómina:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE); 
        }
        
        
        
        /* Cargamos combos con tipo comprobante y estatus     
        Tipo Comprobante -> 1.Factura  2.Nomina
        Tipo Estatus ->  1. ArchivoMaestro 2.ComprobanteFiscal        
        */
        
        /* Ocultamos label y select para uso futuro en archivo maestro procesados*/
        jLabel44.setVisible(false);
        cmbTipoAP.setVisible(false);
        
        EstatusDaoImpl estatusDaoImpl = new EstatusDaoImpl(this.conn);
        TipocomprobanteDaoImpl tipoComprobanteDaoImpl  =  new TipocomprobanteDaoImpl(this.conn);
        
        Estatus[] estatusDto = null;
        Tipocomprobante[]tipoComprobanteDto = null;
        try{
            estatusDto = estatusDaoImpl.findByDynamicWhere(" TIPOESTATUS = 1", null);
            tipoComprobanteDto = tipoComprobanteDaoImpl.findAll();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
        
        cmbProcesadosAP.addItem("Selecciona...");          
        for(Estatus item:estatusDto)
        {
           cmbProcesadosAP.addItem(item.getNombreestatus());
        }
        /*
        cmbTipoAP.addItem("Selecciona...");          
        for(Tipocomprobante element:tipoComprobanteDto)
        {
           cmbTipoAP.addItem(element.getNombretipocomprobante());
        }*/
        
        
        try{
            estatusDto = estatusDaoImpl.findByDynamicWhere(" TIPOESTATUS = 2", null);
            tipoComprobanteDto = tipoComprobanteDaoImpl.findAll();
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }        
        
        /* Comprobante fiscal */
        cmbEstatusCP.addItem("Selecciona...");          
        for(Estatus item:estatusDto)
        {
           cmbEstatusCP.addItem(item.getNombreestatus());
        }
        
        cmbTipoCP.addItem("Selecciona...");          
        for(Tipocomprobante element:tipoComprobanteDto)
        {
           cmbTipoCP.addItem(element.getNombretipocomprobante());
        }
        
        
        initComponentsConfiguracionAcciones();
         
    }
    
    /**
     * Inicializa los datos en el Tab de Configuración Acciones
     */
    public void initComponentsConfiguracionAcciones(){
        //Cargamos impresoras disponibles a combo de Impresoras
        PrintService[] ps = PrintServiceLookup.lookupPrintServices(null, null);
        cmbAccionImpresora.addItem("Selecciona Impresora...");
        for (PrintService p : ps) {
            cmbAccionImpresora.addItem(p.getName());
        }
        
        //Cargamos datos a tabla de Configuracion Acciones
        try{
            configuracionAcciones_action action = new configuracionAcciones_action(this);
            jTableAcciones.setModel(action.fillAcciones());
        }catch(Exception e){
            JOptionPane.showMessageDialog(null,"Error al cargar tabla Configuración Acciones:\n" + e.toString(),"Error",JOptionPane.ERROR_MESSAGE); 
        }
        
    }
    
    
    
    public void limpiaFormulario(JPanel panel) {
        limpiaFormulario(panel, false);
    }
    public void limpiaFormulario(JPanel panel, boolean limpiarCheckBox) {
        // Component componentes[] = getContentPane().getComponents(); 
        Component componentes[] = panel.getComponents();
        /* Conseguimos todos los componentes del contenedor utilizado */

        for (int i = 0; i < componentes.length; i++) {
            String clase = componentes[i].getClass().getName();

            if (clase.equals("javax.swing.JTextField")) {

                JTextField tmp = (JTextField) componentes[i];
                tmp.setText("");
            }

            if (clase.equals("javax.swing.JPasswordField")) {
                JPasswordField tmp = (JPasswordField) componentes[i];
                tmp.setText("");
            }

            if (clase.equals("javax.swing.JComboBox")) {
                JComboBox tmp = (JComboBox) componentes[i];
                tmp.setSelectedIndex(0);
            }
            
             if(clase.equals("javax.swing.JCheckBox") 
                     && limpiarCheckBox)
             {
                JCheckBox tmp = (JCheckBox)componentes[i];
                tmp.setSelected(false);
             }
        }

    }
    
    public void switchEstatusServicio(){
        if (servicioIniciado){
            //Pasar estado de botones a servicio iniciado
            btnStartService.setEnabled(false);
            btnStopService.setEnabled(true);
            btnRestartService.setEnabled(true);
        }else{
            //Pasar estado de botones a servicio detenido
            btnStartService.setEnabled(true);
            btnStopService.setEnabled(false);
            btnRestartService.setEnabled(false);
        }
    }
    
    public void concluirSistema(){
        if (schedulerCron!=null){
            //Detenemos servicio de monitoreo
            configuracionGeneral_action action = new configuracionGeneral_action(this);
            action.detenerServiciosMonitor(false);
        }
        
        //Cerramos conexión a bd
        ResourceManager.close(conn);
    }
    
    public Scheduler getSchedulerCron() {
        return schedulerCron;
    }

    public void setSchedulerCron(Scheduler schedulerCron) {
        this.schedulerCron = schedulerCron;
    }

    public JobDetail getJobMonitorTimbrado() {
        return jobMonitorTimbrado;
    }

    public void setJobMonitorTimbrado(JobDetail jobMonitorTimbrado) {
        this.jobMonitorTimbrado = jobMonitorTimbrado;
    }

    public JobDetail getJobMonitorCancelado() {
        return jobMonitorCancelado;
    }

    public void setJobMonitorCancelado(JobDetail jobMonitorCancelado) {
        this.jobMonitorCancelado = jobMonitorCancelado;
    }

    public boolean isServicioIniciado() {
        return servicioIniciado;
    }

    public void setServicioIniciado(boolean servicioIniciado) {
        this.servicioIniciado = servicioIniciado;
    }

    public JobDetail getJobMonitorContabilidad() {
        return jobMonitorContabilidad;
    }

    public void setJobMonitorContabilidad(JobDetail jobMonitorContabilidad) {
        this.jobMonitorContabilidad = jobMonitorContabilidad;
    }

    public JobDetail getJobMonitorPayPoint() {
        return jobMonitorPayPoint;
    }

    public void setJobMonitorPayPoint(JobDetail jobMonitorPayPoint) {
        this.jobMonitorPayPoint = jobMonitorPayPoint;
    }
    
    

}
