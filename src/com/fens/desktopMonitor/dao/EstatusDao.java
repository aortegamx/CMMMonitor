/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.fens.desktopMonitor.dao;

import com.fens.desktopMonitor.dto.*;
import com.fens.desktopMonitor.exceptions.*;

public interface EstatusDao
{
	/** 
	 * Inserts a new row in the ESTATUS table.
	 */
	public EstatusPk insert(Estatus dto) throws EstatusDaoException;

	/** 
	 * Updates a single row in the ESTATUS table.
	 */
	public void update(EstatusPk pk, Estatus dto) throws EstatusDaoException;

	/** 
	 * Deletes a single row in the ESTATUS table.
	 */
	public void delete(EstatusPk pk) throws EstatusDaoException;

	/** 
	 * Returns the rows from the ESTATUS table that matches the specified primary-key value.
	 */
	public Estatus findByPrimaryKey(EstatusPk pk) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria 'IDESTATUS = :idestatus'.
	 */
	public Estatus findByPrimaryKey(int idestatus) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria ''.
	 */
	public Estatus[] findAll() throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria 'IDESTATUS = :idestatus'.
	 */
	public Estatus[] findWhereIdestatusEquals(int idestatus) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria 'NOMBREESTATUS = :nombreestatus'.
	 */
	public Estatus[] findWhereNombreestatusEquals(String nombreestatus) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Estatus[] findWhereDescripcionEquals(String descripcion) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the criteria 'TIPOESTATUS = :tipoestatus'.
	 */
	public Estatus[] findWhereTipoestatusEquals(int tipoestatus) throws EstatusDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the ESTATUS table that match the specified arbitrary SQL statement
	 */
	public Estatus[] findByDynamicSelect(String sql, Object[] sqlParams) throws EstatusDaoException;

	/** 
	 * Returns all rows from the ESTATUS table that match the specified arbitrary SQL statement
	 */
	public Estatus[] findByDynamicWhere(String sql, Object[] sqlParams) throws EstatusDaoException;

}
