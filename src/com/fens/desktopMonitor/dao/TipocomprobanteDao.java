/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.fens.desktopMonitor.dao;

import com.fens.desktopMonitor.dto.*;
import com.fens.desktopMonitor.exceptions.*;

public interface TipocomprobanteDao
{
	/** 
	 * Inserts a new row in the TIPOCOMPROBANTE table.
	 */
	public TipocomprobantePk insert(Tipocomprobante dto) throws TipocomprobanteDaoException;

	/** 
	 * Updates a single row in the TIPOCOMPROBANTE table.
	 */
	public void update(TipocomprobantePk pk, Tipocomprobante dto) throws TipocomprobanteDaoException;

	/** 
	 * Deletes a single row in the TIPOCOMPROBANTE table.
	 */
	public void delete(TipocomprobantePk pk) throws TipocomprobanteDaoException;

	/** 
	 * Returns the rows from the TIPOCOMPROBANTE table that matches the specified primary-key value.
	 */
	public Tipocomprobante findByPrimaryKey(TipocomprobantePk pk) throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the criteria 'IDTIPOCOMPROBANTE = :idtipocomprobante'.
	 */
	public Tipocomprobante findByPrimaryKey(int idtipocomprobante) throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the criteria ''.
	 */
	public Tipocomprobante[] findAll() throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the criteria 'IDTIPOCOMPROBANTE = :idtipocomprobante'.
	 */
	public Tipocomprobante[] findWhereIdtipocomprobanteEquals(int idtipocomprobante) throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the criteria 'NOMBRETIPOCOMPROBANTE = :nombretipocomprobante'.
	 */
	public Tipocomprobante[] findWhereNombretipocomprobanteEquals(String nombretipocomprobante) throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the criteria 'DESCRIPCION = :descripcion'.
	 */
	public Tipocomprobante[] findWhereDescripcionEquals(String descripcion) throws TipocomprobanteDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the specified arbitrary SQL statement
	 */
	public Tipocomprobante[] findByDynamicSelect(String sql, Object[] sqlParams) throws TipocomprobanteDaoException;

	/** 
	 * Returns all rows from the TIPOCOMPROBANTE table that match the specified arbitrary SQL statement
	 */
	public Tipocomprobante[] findByDynamicWhere(String sql, Object[] sqlParams) throws TipocomprobanteDaoException;

}
