-- Script BD monitorTexto : Motor Derby   --> DB Embebida  -->APP root
-- URL relativa .\\DB\\monitorTexto  opcional: ;create=true -->crear bd   puerto default :1527
-- URL Ej. jdbc:derby:C:/Users/578/Documents/NetBeansProjects/CMMDesktopMonitor/DB/monitorTexto;create=true;user=APP;password=root

CREATE TABLE configuracion (
	idConfifuracion INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	rutaOrigenProcesar VARCHAR(200),
	rutaCarpetaEjecucion VARCHAR(200),
	rutaCarpetaErrores VARCHAR(200),	
	rutaCarpetaExitosos VARCHAR(200),	
	rutaOrigenCancelacionesXML VARCHAR(200),
	rutaDestinoCancelacionesXML VARCHAR(200),
	renameArchivosTimbrados VARCHAR(200),
	ligaPac VARCHAR(200),
	usuarioPac VARCHAR(30),
	passPac VARCHAR(30),
	minutosDemon INT,
	envioDeCorreo INT DEFAULT 0,
	correoRemitente VARCHAR(50),
	usuarioRemitente VARCHAR(100),
	dominioSMTP VARCHAR(50),
	puertoSMTP INT,
	passwordCorreo VARCHAR(50),
	autenticacionSMTP INT,
	destinatariosFijos VARCHAR(300),
	asuntoCorreo VARCHAR (200),
	plantillaCorreo LONG VARCHAR,
        activarImpresion int default 0,
	impresoraPredeterminada LONG VARCHAR,
        error_pac_ultima_conn int default 0,
        ruta_ejecutable_adobe_reader VARCHAR(200),
        ruta_carpeta_origen_econtabilidad VARCHAR(200),
        ruta_carpeta_destino_econtabilidad VARCHAR(200)
);

/* Usar tabla anterior o si faltan los ultimos en version anterior, usar alter
    ALTER TABLE configuracion ADD ruta_ejecutable_adobe_reader VARCHAR(200);
    ALTER TABLE configuracion ADD ruta_carpeta_origen_econtabilidad VARCHAR(200);
    ALTER TABLE configuracion ADD ruta_carpeta_destino_econtabilidad VARCHAR(200);
*/

-- Registro default
INSERT INTO configuracion  (RUTAORIGENPROCESAR,RUTACARPETAEJECUCION,RUTACARPETAERRORES,RUTACARPETAEXITOSOS,RUTAORIGENCANCELACIONESXML,RUTADESTINOCANCELACIONESXML,RENAMEARCHIVOSTIMBRADOS,LIGAPAC,USUARIOPAC,PASSPAC,MINUTOSDEMON,ENVIODECORREO,CORREOREMITENTE,USUARIOREMITENTE,DOMINIOSMTP,PUERTOSMTP,PASSWORDCORREO,AUTENTICACIONSMTP,DESTINATARIOSFIJOS,ASUNTOCORREO,PLANTILLACORREO,ACTIVARIMPRESION,IMPRESORAPREDETERMINADA) 
VALUES ('','','','','','','','','','',1,0,'','','',0,'',0,'','','',0,'');

CREATE TABLE emisor(
	idEmisor INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,	
	rfc VARCHAR(14) UNIQUE,
	razonSocial VARCHAR(100),
	nombreComercial VARCHAR(100),
	regimenFiscal VARCHAR(100),
	estatus INT,
	registroPatronal VARCHAR(100),
        plantillaComprobante VARCHAR(200),
        rutaLogo VARCHAR(200),
        rutaCer VARCHAR(200),
        rutaKey VARCHAR(200),
        emisorPass VARCHAR(200),
        plantillaNomina VARCHAR(200)
);

CREATE TABLE ubicacionFiscal (
	idUbicacionFiscal INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	idEmisor INT NOT NULL,
	calle VARCHAR(100),
	numInt VARCHAR(30),
	numExt VARCHAR(30),
	colonia VARCHAR(100),
	codigoPostal VARCHAR(10),
	pais VARCHAR(100),
	estado VARCHAR(100),
	municipio VARCHAR(100),
	FOREIGN KEY (idEmisor) REFERENCES emisor(idEmisor)
);


CREATE TABLE estatus(
	idEstatus INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	nombreEstatus VARCHAR(35),
	descripcion VARCHAR(50),
	tipoEstatus INT NOT NULL DEFAULT 0
);

INSERT INTO estatus (NOMBREESTATUS, DESCRIPCION,TIPOESTATUS) VALUES('EN_PROCESO','EN PROCESO',1),('EXITO','EXITO',1),('ERROR','ERROR',1); 
--INSERT INTO estatus (NOMBREESTATUS, DESCRIPCION,TIPOESTATUS) VALUES('CREADO','CREADO',2),('TIMBRADOEXITO','TIMBRADO EXITO',2),('TIMBRADOERROR','TIMBRADO ERROR',2),('CANCELADOEXITO','CANCELADO EXITO',2),('CANCELADOERROR','CANCELADO ERROR',2);
INSERT INTO estatus (NOMBREESTATUS, DESCRIPCION,TIPOESTATUS) VALUES('TIMBRADO_PROCESO','TIMBRADO EN PROCESO',2),('TIMBRADO_EXITO','TIMBRADO EXITO',2),('TIMBRADO_ERROR','TIMBRADO ERROR',2),('CANCELADO_PROCESO','CANCELADO EN PROCESO',2),('CANCELADO_EXITO','CANCELADO EXITO',2),('CANCELADO_ERROR','CANCELADO ERROR',2);

CREATE TABLE archivoMaestro(
	idArchivoMaestro INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	nombreArchivo VARCHAR(150),
	idEstatus INT NOT NULL DEFAULT 0,
	fechaCreacion TIMESTAMP,
	fechaProceso TIMESTAMP,
	numeroFacturas INT,
	tamanoArchivo INT,
        md5_checksum VARCHAR(100),
        observaciones VARCHAR(300),
	FOREIGN KEY (idEstatus) REFERENCES estatus(idEstatus)
);

CREATE TABLE tipoComprobante(
	idTipoComprobante INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	nombreTipoComprobante VARCHAR(50),
	descripcion VARCHAR(50)	
);

INSERT INTO tipocomprobante (NOMBRETIPOCOMPROBANTE, DESCRIPCION) VALUES('FACTURA','FACTURA'),('NOMINA','NOMINA');

CREATE TABLE comprobanteFiscal (
	idComprobanteFiscal INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	idEmisor INT NOT NULL,
	idArchivoMaestro INT,
	idEstatus INT NOT NULL DEFAULT 0,
        idTipoComprobante INT NOT NULL DEFAULT 0,
	nombreArchivoXml VARCHAR(500),
	nombreArchivoPdf VARCHAR(500),	
	serie VARCHAR(10),
	folio VARCHAR(10),
	uuid VARCHAR(40),
	selloEmisor LONG VARCHAR,
	fechaHoraSellado TIMESTAMP,
	fechaHoraTimbrado TIMESTAMP,
	fechaHoraProceso TIMESTAMP,	
	rfcReceptor VARCHAR(14),
	subtotal FLOAT,
	total FLOAT,        
	cadenaOriginal LONG VARCHAR, 
	fechaCancelacion TIMESTAMP,
	moneda VARCHAR (20),
	observaciones VARCHAR(300),	
	FOREIGN KEY (idEmisor) REFERENCES emisor(idEmisor),
	FOREIGN KEY (idArchivoMaestro) REFERENCES archivoMaestro (idArchivoMaestro),
	FOREIGN KEY (idEstatus) REFERENCES estatus(idEstatus),        
        FOREIGN KEY (idTipoComprobante) REFERENCES tipoComprobante(idTipoComprobante)
);


CREATE TABLE nomina(
	idNomina INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	idComprobanteFiscal INT NOT NULL UNIQUE,
        num_empleado VARCHAR(15),
	fecha_pago TIMESTAMP,
	fecha_inicial_pago TIMESTAMP,
	fecha_fin_pago TIMESTAMP,
        departamento VARCHAR(100),
        nombre_empleado VARCHAR(500),
        puesto VARCHAR(500),
	num_dias_pagados FLOAT,
	total_percepcion_exentas FLOAT,
        total_percepcion_gravadas FLOAT,
        total_deduccion_exentas FLOAT,
        total_deduccion_gravadas FLOAT,
        total_incapacidad_descuento FLOAT,
        total_hrextra_doble_hr FLOAT,
        total_hrextra_doble_imp FLOAT,
        total_hrextra_triple_hr FLOAT,
        total_hrextra_triple_imp FLOAT,
	FOREIGN KEY (idComprobanteFiscal) REFERENCES comprobanteFiscal(idComprobanteFiscal)
);


CREATE TABLE serie (
	id_serie INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	idEmisor INT NOT NULL,
        idTipoComprobante INT NOT NULL,
        nombre_serie VARCHAR(20),
	rango_ini INT,
        rango_fin INT,
        ultimo_folio INT,
        id_estatus_serie INT DEFAULT 1
);


CREATE TABLE accionComprobante (
	id_accion_comprobante INT GENERATED BY DEFAULT AS IDENTITY (START WITH 1, INCREMENT BY 1) PRIMARY KEY NOT NULL,
	clave_accion VARCHAR(100) NOT NULL UNIQUE,
        codigo_postal_auto VARCHAR(10),
        activar_copia_archivo INT NOT NULL DEFAULT 0,
        ruta_copia_archivo VARCHAR(500),
        activar_correo INT NOT NULL DEFAULT 0,
        correo_destinatarios VARCHAR(300),
        activar_impresion INT NOT NULL DEFAULT 0,
        nombre_impresora VARCHAR(300),
        plantilla_factura VARCHAR(300),
        plantilla_nomina VARCHAR(300),
        ruta_logo VARCHAR(300),
        activar_soporte_adobe INT NOT NULL DEFAULT 0
);

/* Usar tabla anterior o si faltan los ultimos en version anterior, usar alter
    ALTER TABLE ACCIONCOMPROBANTE ADD plantilla_factura varchar(300);
    ALTER TABLE ACCIONCOMPROBANTE ADD plantilla_nomina varchar(300);
    ALTER TABLE ACCIONCOMPROBANTE ADD ruta_logo varchar(300);
    ALTER TABLE ACCIONCOMPROBANTE ADD activar_soporte_adobe INT NOT NULL DEFAULT 0;
*/